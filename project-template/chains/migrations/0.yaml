verbose: true
ins: config
out: output
vars:

    # structure
    structure:
        structure:
            name: 'structure'
            table: 'cck_structure'
            valid_fields:
                - 'name' # name of entity
                - 'table' # table name of entity
                - 'valid_fields' # list of valid fields
                - 'script_insert' # insert action (YAML script); input: table, data; output: row
                - 'script_update' # update action (YAML script); input: table, pk, data; output: row
                - 'script_delete' # delete action (YAML script); input: table, pk
                - 'script_get' #  get action (YAML script); input: table, query
                - 'script_getOne' # getOne action (YAML script); input: table, pk
                - 'script_preprocess_insert' # preprocess insert (YAML script); input: data; output: data or boolean
                - 'script_preprocess_update' # preprocess update (YAML script); input: data; output: data or boolean
                - 'script_preprocess_delete' # preprocess delete (YAML script); input: data; output: data or boolean
                - 'script_preprocess_query' # preprocess query (YAML script); input: query; output: query
                - 'script_preprocess_row' # preprocess row (YAML script); input: row; output: row
                - 'presentations'

    # user
    user:
        structure:
            name: 'user'
            table: 'cms_user'
            valid_fields:
                - 'user_name'
                - 'hashed_password'
                - 'first_name'
                - 'last_name'
                - 'email_address'
                - 'groups'
        data:
            - _id: 'cms_system'
              user_name: 'cms_system'

    # group structure
    group:
        structure:
            name: 'group'
            table: 'cms_group'
            valid_fields:
                - 'group_name'
                - 'description'
        data:
            - _id: 'cms_super_admin'
              group_name: 'Super Admin of CMS'
            - _id: 'cms_admin'
              group_name: 'Admin of CMS'

series:

    # create structure
    - (config, structure, 'cms.system') -> chimera ../cck.structure.create.yaml

    - parallel:
       - (config, user, 'cms.system') -> chimera ../cck.structure.create.yaml
       - (config, group, 'cms.system') -> chimera ../cck.structure.create.yaml
