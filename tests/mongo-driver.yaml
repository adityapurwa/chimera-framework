out: out
vars:
    mongo_url: mongodb://localhost/project-template
    collection_name: person
    user_id: u001
series:
    ## create config
    - (mongo_url, collection_name, user_id) -> [../mongo-driver.js createDbConfig] -> dbConfig

    ## insert new data
    - ('{"name":"Tono Stark","alias":"Ironman"}') ->-> insert_data
    - (dbConfig, insert_data) -> [../mongo-driver.js insert] -> out.insert_doc

    ## update inserted data with a newer one
    - (out.insert_doc._id) ->-> ironman_id
    - ('{"name":"Toni Stark"}') ->-> update_data
    - (dbConfig, ironman_id, update_data) -> [../mongo-driver.js update] -> out.update_doc

    ## insert another data
    - (dbConfig, insert_data) -> [../mongo-driver.js insert] -> out.another_insert_doc

    ## delete the last one
    - (dbConfig, out.another_insert_doc._id) -> [../mongo-driver.js remove] -> out.remove_doc

    ## insert bulk
    - ('[{"name":"Steve Roger","alias":"Captain America"},{"name":"Bruce Banner","alias":"Hulk"}]') ->-> bulk_insert_data
    - (dbConfig, bulk_insert_data) -> [../mongo-driver.js insert] -> out.insert_bulk_docs

    ## update bulk
    - ('{"affiliation":"Avenger"}') ->-> bulk_update_data
    - (dbConfig, "{}", bulk_update_data) -> [../mongo-driver.js update] -> out.update_bulk_docs

    ## insert superman
    - ('{"name":"Clark Kent","alias":"Superman"}') ->-> superman_data
    - (dbConfig, superman_data) -> [../mongo-driver.js insert] -> out.superman_doc

    ## get ironman
    - (dbConfig, ironman_id) -> [../mongo-driver.js find] -> out.ironman_doc

    ## get ironman, but only show name and alias (affiliation hidden)
    - (dbConfig, ironman_id, 'name alias') -> [../mongo-driver.js find] -> out.ironman_doc_with_name_1
    - (dbConfig, ironman_id, '{"name":1,"alias":1}') -> [../mongo-driver.js find] -> out.ironman_doc_with_name_2
    - (dbConfig, ironman_id, '{"fields":{"name":1,"alias":1}}') -> [../mongo-driver.js find] -> out.ironman_doc_with_name_3
    - (dbConfig, ironman_id, '-name -alias') -> [../mongo-driver.js find] -> out.ironman_doc_no_name_1
    - (dbConfig, ironman_id, '{"name":0,"alias":0}') -> [../mongo-driver.js find] -> out.ironman_doc_no_name_2
    - (dbConfig, ironman_id, '{"name":0,"alias":0}') -> [../mongo-driver.js find] -> out.ironman_doc_no_name_3

    ## get all data
    - (dbConfig) -> [../mongo-driver.js find] -> out.find_docs

    ## get all data affiliate to Avenger
    - (dbConfig, '{"affiliation":"Avenger"}') -> [../mongo-driver.js find] -> out.find_avenger_docs

    ## get the data, limited by 2, skipped one document, and sorted by name
    - (dbConfig, '{}', '{"sort":"name", "limit":2, "skip":1}') -> [../mongo-driver.js find] -> out.find_limited_skipped_sorted_docs

    ## get the data affiliated with Avenger, limited by 2, sorted by alias, only show alias
    - (dbConfig, '{"affiliation":"Avenger"}', '{"sort":"alias", "limit":2, "alias":1}') -> [../mongo-driver.js find] -> out.find_limited_sorted_filtered_docs

    ## get all data, including the deleted one, plus it's histories
    # get "sharingan" configuration
    - (dbConfig) ->-> sharingan_config
    - ("true") ->-> sharingan_config.process_deleted
    - ("true") ->-> sharingan_config.show_history
    # execute find
    - (sharingan_config) -> [../mongo-driver.js find] -> out.find_sharingan_docs

    ## permanent remove
    - (dbConfig) -> [../mongo-driver.js permanentRemove] -> out.permanent_remove_result
